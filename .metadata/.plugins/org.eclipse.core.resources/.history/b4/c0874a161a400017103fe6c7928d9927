
package com.simplex.interprete;
import java.util.ArrayList;


public class SimplexCustomVisitor extends SimplexBaseVisitor<Object> {
	
	ArrayList<String> symbolTableV = new ArrayList<String>();
	ArrayList<String> symbolTableO = new ArrayList<String>();
	ArrayList<String> symbolTableR = new ArrayList<String>();
	ArrayList<String> symbolTableMaxOrMin = new ArrayList<String>();
	ArrayList<String> symbolTableHol = new ArrayList<String>();
	ArrayList<String> lines = new ArrayList<String>();
	


	
	@Override
    public String visitVariable(SimplexParser.VariableContext ctx) {
        symbolTableV.add(ctx.ID().getText());
        return null;
    }
	
	@Override
    public String visitFunc(SimplexParser.FuncContext ctx) {
		symbolTableO.add(ctx.getText());
		System.out.println(symbolTableO.get(0));
		return null;
    }
	
	@Override
    public String visitRes(SimplexParser.ResContext ctx) {
		symbolTableR.add(ctx.getText());
		return null;
    }
	
	@Override
    public String visitObjective(SimplexParser.ObjectiveContext ctx) {
		symbolTableMaxOrMin.add(ctx.getText());
		for (int j = 0; j < symbolTableMaxOrMin.size(); j++) {
			System.out.println(symbolTableMaxOrMin.get(j));
		}
		return null;
    }
	

	
	public String lineA(String line){
		String answer="";
		for (int i = 0; i < symbolTableV.size(); i++) {
			if (line.contains(symbolTableV.get(i))) {
				continue;
			}else{
				String[]temp=line.split("=");
				String t1=temp[1];
				String t2=".0";
				line=temp[0]+"="+t2+t1;
			}
		}
		
		if(line.contains(">=")){

		}
		else if(line.contains("<=")){
			   String[]temp=line.split("<=");
			   temp[0]=temp[0].replaceAll("[a-zA-Z_][a-zA-Z0-9_]*","&");
			   temp[0]=temp[0].replace("+",".+");
			   temp[0]=temp[0].replace("-",".-");
			   String[]temp1=temp[0].split("[+|-]");
			   for (int i = 0; i < temp1.length; i++) {
				   if(temp1[i].matches(".*\\d+.*")){
					   temp1[i]=temp1[i].replace("&","");
					   answer+=temp1[i];
				   }else{
					   temp1[i]=temp1[i].replace("&","1");
					   answer+=temp1[i];
				   }
			   }
			   if (symbolTableHol.size()>0) {
				   for (int i = 0; i < symbolTableHol.size(); i++) {
					   answer+=".0";
				   }
			   }
			   answer+=".1";
			   symbolTableHol.add("1");
			   answer+="."+temp[1];
		}
		else if(line.contains("=")){

		}
		return answer;
	}
}
